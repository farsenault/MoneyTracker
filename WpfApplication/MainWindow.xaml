<Window x:Class="WpfApplication.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication.UserControls"
        xmlns:me="clr-namespace:WpfApplication"
        xmlns:vm="clr-namespace:WpfApplication.ViewModels"
        xmlns:xc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        mc:Ignorable="d"
        Title="Money Tracker" Height="768" Width="1024">

    <Window.DataContext>
        <vm:MainWindowVM />
    </Window.DataContext>

    <xc:BusyIndicator IsBusy="{Binding IsBusy, Mode=OneWay}">
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open..." Command="{Binding OpenCommand, Mode=OneTime}" />
                    <Separator />
                    <MenuItem Header="_Save" Command="{Binding SaveCommand, Mode=OneTime}" />
                    <MenuItem Header="_Save As..." Command="{Binding SaveAsCommand, Mode=OneTime}" />
                    <Separator />
                    <MenuItem Header="E_xit" Command="{Binding ExitCommand, Mode=OneTime}" />
                </MenuItem>
                <MenuItem Header="_Actions">
                    <MenuItem Header="New Account..." Command="{Binding OpenAccountEntryCommand, Mode=OneTime}" />
                    <MenuItem Header="New Category..." Command="{Binding OpenCategoryEntryCommand, Mode=OneTime}" />
                    <MenuItem Header="New Product..." Command="{Binding OpenProductEntryCommand, Mode=OneTime}" />
                    <MenuItem Header="New Bill/Receipt..." Command="{Binding OpenReceiptEntryCommand, Mode=OneTime}" />
                </MenuItem>
            </Menu>
            <TabControl Grid.Row="0" Grid.Column="2" DockPanel.Dock="Bottom">
                <TabItem Header="Accounts">
                    <local:AccountsGrid DataContext="{Binding AccountsGridVM, Mode=OneWay}" />
                </TabItem>
                <TabItem Header="Posted">
                    <TabControl>
                        <TabItem Header="Transactions">
                            <local:TransactionsGrid DataContext="{Binding TransactionsGridVM, Mode=OneWay}"/>
                        </TabItem>
                        <TabItem Header="Details">
                            <local:TransactionDetailsGrid DataContext="{Binding TransactionDetailsGridVM, Mode=OneWay}"/>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="Scheduled">
                    <local:ScheduledTransactionsGrid DataContext="{Binding ScheduledTransactionsGridVM, Mode=OneWay}"/>
                </TabItem>
                <TabItem Header="Projected">
                    <xc:BusyIndicator IsBusy="{Binding IsCalculatingProjection}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Label Content="Account:" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox x:Name="projectedAccount" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Repository.Accounts}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding SelectedProjectedAccountId}"/>

                            <Label Content="Begin Date:" Grid.Row="1" Grid.Column="0"/>
                            <DatePicker Grid.Row="1" Grid.Column="1" SelectedDate="{Binding ProjectedBeginDate}" />

                            <Label Content="End Date:" Grid.Row="2" Grid.Column="0"/>
                            <DatePicker Grid.Row="2" Grid.Column="1" SelectedDate="{Binding ProjectedEndDate}" />

                            <Button Content="Calculate Projection" Command="{Binding CalculateProjectionCommand}" Grid.Row="3" Grid.ColumnSpan="2" />

                            <TabControl  Grid.Row="4" Grid.ColumnSpan="2"  >
                                <TabItem Header="Line Chart">
                                    <charting:Chart                            
                                            Margin="10"
                                            Title="Daily Balance">
                                        <charting:AreaSeries
                                                Title="Balance ($)"                                                
                                                ItemsSource="{Binding ProjectedBalances}"
                                                IndependentValuePath="Date"
                                                DependentValuePath="Balance"/>
                                        <charting:Chart.Axes>
                                            <!-- Axis for custom range -->
                                            <charting:LinearAxis
                                                    Orientation="Y"                           
                                                    ShowGridLines="True"/>
                                            <!-- Axis for custom labels -->
                                            <charting:DateTimeAxis
                                                    Orientation="X"
                                                    ShowGridLines="True">
                                                <charting:DateTimeAxis.AxisLabelStyle>
                                                    <Style TargetType="charting:DateTimeAxisLabel">
                                                        <Setter Property="StringFormat" Value="{}{0:MMM d}"/>
                                                    </Style>
                                                </charting:DateTimeAxis.AxisLabelStyle>
                                            </charting:DateTimeAxis>
                                        </charting:Chart.Axes>
                                    </charting:Chart>
                                </TabItem>
                                <TabItem Header="Data">
                                    <DataGrid ItemsSource="{Binding ProjectedBalances, Mode=OneWay}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Date" Binding="{Binding Date, Mode=OneWay, StringFormat=d}" />
                                            <DataGridTextColumn Header="Balance" Binding="{Binding Balance, Mode=OneWay, StringFormat=c2}"/>
                                        </DataGrid.Columns>
                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <DataGrid ItemsSource="{Binding Transactions}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Header="Date" Binding="{Binding Date, StringFormat=d}"/>
                                                        <DataGridTextColumn Header="Memo" Binding="{Binding Memo}"/>
                                                        <DataGridTextColumn Header="ReceiptId" Binding="{Binding ReceiptId}" IsReadOnly="True"/>
                                                    </DataGrid.Columns>
                                                    <DataGrid.RowDetailsTemplate>
                                                        <DataTemplate>
                                                            <DataGrid ItemsSource="{Binding Details}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True">
                                                                <DataGrid.Columns>
                                                                    <DataGridTemplateColumn Header="Account" IsReadOnly="True">
                                                                        <DataGridTemplateColumn.CellTemplate>
                                                                            <DataTemplate>
                                                                                <ComboBox ItemsSource="{Binding DataContext.Repository.Accounts, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding AccountId}" IsEnabled="False"/>
                                                                            </DataTemplate>
                                                                        </DataGridTemplateColumn.CellTemplate>
                                                                    </DataGridTemplateColumn>
                                                                    <DataGridTextColumn Header="Reference" Binding="{Binding Reference}"/>
                                                                    <DataGridTextColumn Header="Credit" Binding="{Binding CreditAmount, StringFormat=c2}"/>
                                                                    <DataGridTextColumn Header="Debit" Binding="{Binding DebitAmount, StringFormat=c2}"/>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </DataTemplate>
                                                    </DataGrid.RowDetailsTemplate>
                                                </DataGrid>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>
                                    </DataGrid>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </xc:BusyIndicator>
                </TabItem>
            </TabControl>
        </DockPanel>
    </xc:BusyIndicator>
</Window>
